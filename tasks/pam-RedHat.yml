---
- name: Enforce users to use strong passwords (RedHat systems).
  pamd:
    name: system-auth
    type: password
    control: "requisite"
    module_path: pam_pwquality.so
    module_arguments: "try_first_pass
      local_users_only
      retry=3
      authok_type=
      minlen=12
      lcredit=-1
      ucredit=-1
      dcredit=-1
      ocredit=-1
      enforce_for_root"
    state: args_present
    backup: true
  when: security_enforce_strong_passwords | bool

- name: Lock user account after number of failed login attempts (RedHat systems).
  block:
    - name: password-auth (auth required)
      pamd:
        name: password-auth
        type: auth
        control: required
        module_path: pam_env.so
        new_type: auth
        new_control: required
        new_module_path: pam_faillock.so
        module_arguments: "preauth silent audit deny={{ security_lock_after_num_of_failed_logins }} unlock_time=1800"
        state: after
        backup: true

    - name: password-auth (auth [default=die])
      pamd:
        name: password-auth
        type: auth
        control: sufficient
        module_path: pam_unix.so
        new_type: auth
        new_control: "[default=die]"
        new_module_path: pam_faillock.so
        module_arguments: "authfail audit deny={{ security_lock_after_num_of_failed_logins }} unlock_time=1800"
        state: after
        backup: true

    - name: password-auth (account required)
      pamd:
        name: password-auth
        type: account
        control: required
        module_path: pam_unix.so
        new_type: account
        new_control: required
        new_module_path: pam_faillock.so
        module_arguments: "authfail audit deny={{ security_lock_after_num_of_failed_logins }} unlock_time=1800"
        state: before
        backup: true

    - name: system-auth (auth required)
      pamd:
        name: system-auth
        type: auth
        control: required
        module_path: pam_env.so
        new_type: auth
        new_control: required
        new_module_path: pam_faillock.so
        module_arguments: "preauth silent audit deny={{ security_lock_after_num_of_failed_logins }} unlock_time=1800"
        state: after
        backup: true

    - name: system-auth (auth [default=die])
      pamd:
        name: system-auth
        type: auth
        control: sufficient
        module_path: pam_unix.so
        new_type: auth
        new_control: "[default=die]"
        new_module_path: pam_faillock.so
        module_arguments: "authfail audit deny={{ security_lock_after_num_of_failed_logins }} unlock_time=1800"
        state: after
        backup: true

    - name: system-auth (account required)
      pamd:
        name: system-auth
        type: account
        control: required
        module_path: pam_unix.so
        new_type: account
        new_control: required
        new_module_path: pam_faillock.so
        module_arguments: "authfail audit deny={{ security_lock_after_num_of_failed_logins }} unlock_time=1800"
        state: before
        backup: true
  when: security_lock_after_failed_logins | bool
