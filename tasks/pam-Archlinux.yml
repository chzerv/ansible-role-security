---
- name: Enforce users to use strong passwords (Archlinux systems)
  block:
    - name: Install cracklib
      pacman:
        name: cracklib
        state: present

    - name: Enable pam_cracklib.so.
      replace:
        path: /etc/pam.d/passwd
        regexp: '^#password\s*required\s*pam_cracklib\.so.*'
        replace: >
          password\trequired\tpam_cracklib.so
          retry=3
          minlen=12
          difok=4
          lcredit=-1
          dcredit=-1
          ocredit=-1
          ucredit=-1
        backup: true
        mode: "0644"

    - name: Replace nullok argument with use_authtok for pam_unix.so.
      pamd:
        name: passwd
        type: password
        control: required
        module_path: pam_unix.so
        module_arguments: "sha512 shadow use_authtok"
        state: updated
        backup: true
  when: security_enforce_strong_passwords | bool

- name: Check if pam_faillock.so is used.
  shell:
    cmd: 'grep -c "^auth\s*required\s*pam_faillock\.so.*" system-auth || true'
    chdir: /etc/pam.d
  changed_when: false
  register: pam_faillock_exists

- name: Check if pam_tally2.so is used.
  shell:
    cmd: 'grep -c "^auth\s*required\s*pam_tally2\.so.*" system-login || true'
    chdir: /etc/pam.d
  changed_when: false
  register: pam_tally_exists

- name: Lock user account after number of failed login attempts, using pam_faillock (Archlinux systems).
  block:
    - name: Update pam_faillock.so arguments, if it's being used - step 1
      pamd:
        name: system-auth
        type: auth
        control: required
        module_path: pam_faillock.so
        module_arguments: "preauth silent audit deny={{ security_lock_after_num_of_failed_logins }} unlock_time=1800"
        state: updated
        backup: true

    - name: Update pam_faillock.so arguments, if it's being used - step 2
      pamd:
        name: system-auth
        type: auth
        control: "[default=die]"
        module_path: pam_faillock.so
        module_arguments: "authfail audit deny={{ security_lock_after_num_of_failed_logins }} unlock_time=1800"
        state: updated
        backup: true
  when:
    - pam_faillock_exists.stdout != "0"
    - pam_tally_exists.stdout == "0"
    - security_lock_after_failed_logins | bool

- name: Lock user account after number of failed login attempts, using pam_tally2 (Archlinux systems).
  pamd:
    name: system-login
    type: auth
    control: required
    module_path: pam_tally2.so
    module_arguments: "deny={{ security_lock_after_num_of_failed_logins }} unlock_time=1800 onerr=succeed file=/var/log/tallylog"
    state: updated
    backup: true
  when:
    - pam_tally_exists.stdout != "0"
    - pam_faillock_exists.stdout == "0"
    - security_lock_after_failed_logins | bool
